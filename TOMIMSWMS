
--CKFK 20190319 Agregue el create de la tabla i_nav_barras_pallet
CREATE TABLE [dbo].[i_nav_barras_pallet](
	[IdPallet] [int] NOT NULL,
	[Codigo] [nvarchar](50) NULL,
	[Nombre] [nvarchar](100) NULL,
	[Camas_Por_Tarima] [int] NULL,
	[Cajas_Por_Cama] [int] NULL,
	[Cantidad_Presentacion] [float] NULL,
	[UM_Producto] [nvarchar](50) NULL,
	[Lote] [nvarchar](50) NULL,
	[Fecha_Agregado] [datetime] NULL,
	[Fecha_Ingreso] [date] NULL,
	[Fecha_Vence] [date] NULL,
	[Fecha_Produccion] [date] NULL,
	[Activo] [bit] NULL,
	[Recibido] [bit] NULL,
	[IdRecepcion] [int] NULL,
	[Bodega_Origen] [nvarchar](50) NULL,
	[Bodega_Destino] [nvarchar](50) NULL,
	[codigo_barra] [nvarchar](50) NULL,
 CONSTRAINT [PK_i_nav_barras_pallet] PRIMARY KEY CLUSTERED 
(
	[IdPallet] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

/****** Excluir las ubicaciones de tránsito para stock específico en pedidos ******/
ALTER VIEW [dbo].[VW_Stock_Especifico]
AS
SELECT        dbo.producto_bodega.IdBodega, dbo.propietarios.IdPropietario, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto.IdProducto, 
                         dbo.producto_bodega.IdProductoBodega, dbo.stock.IdStock, dbo.stock.IdUbicacion_anterior, dbo.unidad_medida.IdUnidadMedida, dbo.stock.IdProductoEstado, 
                         dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.propietarios.nombre_comercial AS Propietario, dbo.producto.codigo, dbo.producto.codigo_barra AS Barra, 
                         dbo.producto.nombre, dbo.unidad_medida.Nombre AS UnidadMedida, dbo.producto_presentacion.nombre AS Presentacion, dbo.stock.lote, 
                         dbo.stock.fecha_ingreso AS Ingreso, dbo.stock.fecha_vence AS Vence, dbo.stock.cantidad AS Cantidad_UMBas, SUM(ISNULL(dbo.stock_res.cantidad, 0)) 
                         AS CantidadReservadaUmBas, dbo.stock.cantidad - ISNULL(SUM(dbo.stock_res.cantidad), 0) AS Disponible_UMBas, dbo.stock.peso, 
                         ISNULL(dbo.stock.cantidad / dbo.producto_presentacion.factor, 0) AS Cantidad_Presentacion, dbo.producto_estado.nombre AS NomEstado, 
                         'T[' + dbo.bodega_tramo.descripcion + '] - C[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.indice_x), ''), 2) 
                         + '] - N[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.nivel), ''), 2) 
                         + ']' + ' - P[' + dbo.bodega_ubicacion.orientacion_pos + ']' + ' - #[' + CONVERT(NVARCHAR(25), dbo.bodega_ubicacion.IdUbicacion) + ']' AS UbicacionCompleta, 
                         dbo.producto_estado.dañado, dbo.producto_presentacion.factor, dbo.producto_estado.utilizable AS EstadoUtilizable, dbo.stock.IdUbicacion, dbo.stock.lic_plate, 
                         dbo.stock.serial, dbo.stock.añada, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, 
                         dbo.producto_presentacion.ancho, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho AS Ancho_ubicacion, 
                         dbo.bodega_ubicacion.largo AS Largo_ubicacion, dbo.bodega_ubicacion.alto AS Alto_ubicacion, dbo.indice_rotacion.Descripcion AS IndiceRotacion, 
                         dbo.producto.existencia_min AS Existencia_min_umbas, dbo.producto.existencia_max AS Existencia_max_umbas, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia AS Existencia_min_pres, dbo.producto_presentacion.MaximoExistencia AS Existencia_max_pres, 
                         dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.IdUbicacion AS IdUbicacionActual, dbo.bodega_ubicacion.nivel AS Ubicacion_Nivel, 
                         dbo.bodega_ubicacion.indice_x AS Ubicacion_Indice_X, dbo.bodega_ubicacion.descripcion AS Ubicacion_Nombre, 
                         dbo.bodega_tramo.descripcion AS Ubicacion_Tramo, ISNULL(dbo.motivo_devolucion.Nombre, 'N/A') AS MotivoDevolucion, ISNULL(dbo.trans_oc_pol.NoPoliza, 'N/D') 
                         AS NoPoliza, dbo.producto_clasificacion.IdClasificacion, dbo.producto_familia.IdFamilia, dbo.cliente_tiempos.Dias_Local, dbo.cliente_tiempos.Dias_Exterior, 
                         dbo.cliente_tiempos.IdCliente, CASE WHEN DATEDIFF(DAY, GETDATE(), dbo.stock.fecha_vence) >= dbo.cliente_tiempos.Dias_Local OR
                         DATEDIFF(DAY, GETDATE(), dbo.stock.fecha_vence) >= dbo.cliente_tiempos.Dias_Exterior THEN 'Si' ELSE 'No' END AS Aplica
FROM            dbo.trans_oc_pol RIGHT OUTER JOIN
                         dbo.trans_re_oc INNER JOIN
                         dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc LEFT OUTER JOIN
                         dbo.motivo_devolucion ON dbo.trans_oc_enc.IdMotivoDevolucion = dbo.motivo_devolucion.IdMotivoDevolucion ON 
                         dbo.trans_oc_pol.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc RIGHT OUTER JOIN
                         dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.stock INNER JOIN
                         dbo.propietario_bodega ON dbo.stock.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega ON 
                         dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida LEFT OUTER JOIN
                         dbo.producto_familia INNER JOIN
                         dbo.cliente_tiempos INNER JOIN
                         dbo.producto_clasificacion ON dbo.cliente_tiempos.IdClasificacion = dbo.producto_clasificacion.IdClasificacion ON 
                         dbo.producto_familia.IdFamilia = dbo.cliente_tiempos.IdFamilia RIGHT OUTER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto ON dbo.producto_familia.IdFamilia = dbo.producto.IdFamilia AND 
                         dbo.producto_clasificacion.IdClasificacion = dbo.producto.IdClasificacion ON dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega ON 
                         dbo.trans_re_oc.IdRecepcionEnc = dbo.stock.IdRecepcionEnc LEFT OUTER JOIN
                         dbo.bodega_tramo INNER JOIN
                         dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo ON 
                         dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion LEFT OUTER JOIN
                         dbo.indice_rotacion ON dbo.producto.IdIndiceRotacion = dbo.indice_rotacion.IdIndiceRotacion LEFT OUTER JOIN
                         dbo.stock_res ON dbo.stock.IdStock = dbo.stock_res.IdStock LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.stock.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion
WHERE        (dbo.stock.IdUbicacion NOT IN
                             (SELECT        IdUbicacion
                               FROM            dbo.bodega_ubicacion AS bodega_ubicacion_1
                               WHERE        (ubicacion_despacho = 1)))
GROUP BY dbo.propietarios.nombre_comercial, dbo.propietarios.IdPropietario, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion, dbo.stock.IdUbicacion_anterior, 
                         dbo.propietario_bodega.IdPropietarioBodega, dbo.producto_bodega.IdProductoBodega, dbo.unidad_medida.IdUnidadMedida, dbo.unidad_medida.Nombre, 
                         dbo.producto_presentacion.nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.serial, 
                         dbo.stock.añada, dbo.producto_bodega.IdBodega, dbo.stock.fecha_vence, dbo.stock.IdProductoEstado, dbo.producto_estado.nombre, 
                         dbo.producto_estado.utilizable, dbo.producto_estado.dañado, dbo.stock.IdUbicacion, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.stock.lic_plate, 
                         dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, 
                         dbo.producto_presentacion.factor, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho, dbo.bodega_ubicacion.largo, dbo.bodega_ubicacion.alto, 
                         dbo.indice_rotacion.Descripcion, dbo.producto.existencia_min, dbo.producto.existencia_max, dbo.producto.codigo_barra, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia, dbo.producto_presentacion.MaximoExistencia, dbo.stock.cantidad, 
                         dbo.stock.cantidad / dbo.producto_presentacion.factor, dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.indice_x, 
                         dbo.bodega_ubicacion.descripcion, dbo.bodega_tramo.descripcion, dbo.bodega_ubicacion.orientacion_pos, dbo.motivo_devolucion.Nombre, 
                         dbo.trans_oc_pol.NoPoliza, dbo.producto_clasificacion.IdClasificacion, dbo.producto_familia.IdFamilia, dbo.cliente_tiempos.Dias_Local, 
                         dbo.cliente_tiempos.Dias_Exterior, dbo.cliente_tiempos.IdCliente
GO

/****** Excluir las ubicaciones de tránsito para stock específico en pedidos cuando el cliente no tiene tiempos ******/
ALTER VIEW [dbo].[VW_Stock_Resumen]
AS
SELECT        dbo.producto_bodega.IdBodega, dbo.propietarios.IdPropietario, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto.IdProducto, 
                         dbo.producto_bodega.IdProductoBodega, dbo.stock.IdStock, dbo.stock.IdUbicacion_anterior, dbo.unidad_medida.IdUnidadMedida, dbo.stock.IdProductoEstado, 
                         dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.propietarios.nombre_comercial AS Propietario, dbo.producto.codigo, dbo.producto.codigo_barra AS Barra, 
                         dbo.producto.nombre, dbo.unidad_medida.Nombre AS UnidadMedida, dbo.producto_presentacion.nombre AS Presentacion, dbo.stock.lote, 
                         dbo.stock.fecha_ingreso AS Ingreso, dbo.stock.fecha_vence AS Vence, dbo.stock.cantidad AS Cantidad_UMBas, SUM(ISNULL(dbo.stock_res.cantidad, 0)) 
                         AS CantidadReservadaUmBas, dbo.stock.cantidad - ISNULL(SUM(dbo.stock_res.cantidad), 0) AS Disponible_UMBas, dbo.stock.peso, 
                         ISNULL(dbo.stock.cantidad / dbo.producto_presentacion.factor, 0) AS Cantidad_Presentacion, dbo.producto_estado.nombre AS NomEstado, 
                         'T[' + dbo.bodega_tramo.descripcion + '] - C[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.indice_x), ''), 2) 
                         + '] - N[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.nivel), ''), 2) 
                         + ']' + ' - P[' + dbo.bodega_ubicacion.orientacion_pos + ']' + ' - #[' + CONVERT(NVARCHAR(25), dbo.bodega_ubicacion.IdUbicacion) + ']' AS UbicacionCompleta, 
                         dbo.producto_estado.dañado, dbo.producto_presentacion.factor, dbo.producto_estado.utilizable AS EstadoUtilizable, dbo.stock.IdUbicacion, dbo.stock.lic_plate, 
                         dbo.stock.serial, dbo.stock.añada, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, 
                         dbo.producto_presentacion.ancho, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho AS Ancho_ubicacion, 
                         dbo.bodega_ubicacion.largo AS Largo_ubicacion, dbo.bodega_ubicacion.alto AS Alto_ubicacion, dbo.indice_rotacion.Descripcion AS IndiceRotacion, 
                         dbo.producto.existencia_min AS Existencia_min_umbas, dbo.producto.existencia_max AS Existencia_max_umbas, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia AS Existencia_min_pres, dbo.producto_presentacion.MaximoExistencia AS Existencia_max_pres, 
                         dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.IdUbicacion AS IdUbicacionActual, dbo.bodega_ubicacion.nivel AS Ubicacion_Nivel, 
                         dbo.bodega_ubicacion.indice_x AS Ubicacion_Indice_X, dbo.bodega_ubicacion.descripcion AS Ubicacion_Nombre, 
                         dbo.bodega_tramo.descripcion AS Ubicacion_Tramo, ISNULL(dbo.motivo_devolucion.Nombre, 'N/A') AS MotivoDevolucion, ISNULL(dbo.trans_oc_pol.NoPoliza, 'N/D') 
                         AS NoPoliza
FROM            dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.stock INNER JOIN
                         dbo.propietario_bodega ON dbo.stock.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega ON 
                         dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida LEFT OUTER JOIN
                         dbo.trans_oc_pol RIGHT OUTER JOIN
                         dbo.trans_re_oc INNER JOIN
                         dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc LEFT OUTER JOIN
                         dbo.motivo_devolucion ON dbo.trans_oc_enc.IdMotivoDevolucion = dbo.motivo_devolucion.IdMotivoDevolucion ON 
                         dbo.trans_oc_pol.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc ON dbo.stock.IdRecepcionEnc = dbo.trans_re_oc.IdRecepcionEnc LEFT OUTER JOIN
                         dbo.bodega_tramo INNER JOIN
                         dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo ON 
                         dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion LEFT OUTER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto LEFT OUTER JOIN
                         dbo.indice_rotacion ON dbo.producto.IdIndiceRotacion = dbo.indice_rotacion.IdIndiceRotacion ON 
                         dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega LEFT OUTER JOIN
                         dbo.stock_res ON dbo.stock.IdStock = dbo.stock_res.IdStock LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.stock.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion
WHERE        (dbo.stock.IdUbicacion NOT IN
                             (SELECT        IdUbicacion
                               FROM            dbo.bodega_ubicacion AS bodega_ubicacion_1
                               WHERE        (ubicacion_despacho = 1)))
GROUP BY dbo.propietarios.nombre_comercial, dbo.propietarios.IdPropietario, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion, dbo.stock.IdUbicacion_anterior, 
                         dbo.propietario_bodega.IdPropietarioBodega, dbo.producto_bodega.IdProductoBodega, dbo.unidad_medida.IdUnidadMedida, dbo.unidad_medida.Nombre, 
                         dbo.producto_presentacion.nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.serial, 
                         dbo.stock.añada, dbo.producto_bodega.IdBodega, dbo.stock.fecha_vence, dbo.stock.IdProductoEstado, dbo.producto_estado.nombre, 
                         dbo.producto_estado.utilizable, dbo.producto_estado.dañado, dbo.stock.IdUbicacion, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.stock.lic_plate, 
                         dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, 
                         dbo.producto_presentacion.factor, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho, dbo.bodega_ubicacion.largo, dbo.bodega_ubicacion.alto, 
                         dbo.indice_rotacion.Descripcion, dbo.producto.existencia_min, dbo.producto.existencia_max, dbo.producto.codigo_barra, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia, dbo.producto_presentacion.MaximoExistencia, dbo.stock.cantidad, 
                         dbo.stock.cantidad / dbo.producto_presentacion.factor, dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.indice_x, 
                         dbo.bodega_ubicacion.descripcion, dbo.bodega_tramo.descripcion, dbo.bodega_ubicacion.orientacion_pos, dbo.motivo_devolucion.Nombre, 
                         dbo.trans_oc_pol.NoPoliza
GO

ALTER VIEW [dbo].[VW_Bodega]
AS
SELECT        b.IdBodega AS Correlativo, p.NOMBRE AS Pais, e.nombre AS Empresa, b.codigo AS Código, b.nombre AS Nombre, b.nombre_comercial AS NombreComercial, 
                         b.encargado AS Responsable, b.activo AS Activo
FROM            dbo.bodega AS b INNER JOIN
                         dbo.empresa AS e ON b.IdEmpresa = e.IdEmpresa LEFT OUTER JOIN
                         dbo.paises AS p ON b.IdPais = p.IdPais
GO

ALTER VIEW [dbo].[VW_Despacho_Rep_Det]
AS
SELECT        dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, dbo.trans_picking_ubic.IdPropietarioBodega, 
                         dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, dbo.trans_picking_ubic.IdPresentacion, 
                         dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_despacho_det.IdDespachoEnc, dbo.trans_despacho_det.IdDespachoDet, 
                         dbo.trans_despacho_det.IdPedidoEnc, pr.nombre_comercial AS Propietario, p.codigo AS Codigo_Producto, p.nombre AS Nombre_Producto, um.Nombre AS UM, 
                         pp.nombre AS Presentacion, pp.factor, pe.nombre AS Estado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence AS Vence, 
                         bu.descripcion AS Ubicacion_Origen, ISNULL(dbo.trans_picking_ubic.cantidad_recibida, 0) AS cantidad_pickeada, 
                         ISNULL(dbo.trans_picking_ubic.cantidad_verificada, 0) AS cantidad_verificada, ISNULL(dbo.trans_picking_ubic.peso_recibido, 0) AS Peso_Pickeado, 
                         ISNULL(dbo.trans_picking_ubic.peso_verificado, 0) AS Peso_Verificado, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, 
                         ISNULL(dbo.trans_picking_ubic.encontrado, 0) AS Encontrado, ISNULL(dbo.trans_picking_ubic.acepto, 0) AS Acepto, 
                         dbo.trans_pe_enc.no_documento AS No_Documento_WMS, dbo.trans_pe_enc.referencia AS No_Referencia, dbo.cliente.codigo AS Codigo_Cliente, 
                         dbo.cliente.nombre_comercial AS Nombre_Cliente, dbo.cliente.idubicacionvirtual, dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, 
                         dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, dbo.trans_despacho_enc.marchamo, 
                         dbo.road_ruta.CODIGO AS Codigo_Ruta, dbo.road_ruta.NOMBRE AS Nombre_Ruta, dbo.empresa_transporte_vehiculos.placa AS Placa_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.placa_comercial, dbo.empresa_transporte_vehiculos.marca AS Marca_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.modelo AS Modelo_Vehiculo, dbo.empresa_transporte_pilotos.nombres AS Nombre_Piloto, 
                         dbo.empresa_transporte_pilotos.apellidos AS Apellido_Piloto, dbo.empresa_transporte_pilotos.no_carnet AS No_Carnet_Piloto, 
                         dbo.empresa_transporte_pilotos.no_licencia AS No_Licencia_Piloto, dbo.cliente.IdCliente
FROM            dbo.trans_despacho_det INNER JOIN
                         dbo.bodega_ubicacion AS bu INNER JOIN
                         dbo.producto AS p INNER JOIN
                         dbo.producto_bodega AS pb ON p.IdProducto = pb.IdProducto INNER JOIN
                         dbo.propietario_bodega AS prb ON p.IdPropietario = prb.IdPropietario INNER JOIN
                         dbo.producto_estado AS pe ON prb.IdPropietario = pe.IdPropietario INNER JOIN
                         dbo.unidad_medida AS um ON prb.IdPropietario = um.IdPropietario INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario INNER JOIN
                         dbo.trans_picking_det INNER JOIN
                         dbo.trans_picking_ubic ON dbo.trans_picking_det.IdPickingDet = dbo.trans_picking_ubic.IdPickingDet AND 
                         dbo.trans_picking_det.IdPedidoDet = dbo.trans_picking_ubic.IdPedidoDet ON prb.IdPropietarioBodega = dbo.trans_picking_ubic.IdPropietarioBodega AND 
                         pb.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND pe.IdEstado = dbo.trans_picking_ubic.IdProductoEstado AND 
                         um.IdUnidadMedida = dbo.trans_picking_ubic.IdUnidadMedida ON bu.IdUbicacion = dbo.trans_picking_ubic.IdUbicacion ON 
                         dbo.trans_despacho_det.IdPickingUbic = dbo.trans_picking_ubic.IdPickingUbic AND 
                         dbo.trans_despacho_det.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND 
                         dbo.trans_despacho_det.IdUnidadMedidaBasica = dbo.trans_picking_ubic.IdUnidadMedida INNER JOIN
                         dbo.trans_pe_enc ON prb.IdPropietarioBodega = dbo.trans_pe_enc.IdPropietarioBodega AND 
                         dbo.trans_despacho_det.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc INNER JOIN
                         dbo.cliente ON pr.IdPropietario = dbo.cliente.IdPropietario AND dbo.trans_pe_enc.IdCliente = dbo.cliente.IdCliente INNER JOIN
                         dbo.trans_despacho_enc ON dbo.trans_despacho_det.IdDespachoEnc = dbo.trans_despacho_enc.IdDespachoEnc AND 
                         prb.IdPropietarioBodega = dbo.trans_despacho_enc.IdPropietarioBodega LEFT OUTER JOIN
                         dbo.empresa_transporte_vehiculos ON dbo.trans_despacho_enc.IdVehiculo = dbo.empresa_transporte_vehiculos.IdVehiculo LEFT OUTER JOIN
                         dbo.road_ruta ON dbo.trans_despacho_enc.IdRuta = dbo.road_ruta.IdRuta LEFT OUTER JOIN
                         dbo.empresa_transporte_pilotos ON dbo.trans_despacho_enc.IdPiloto = dbo.empresa_transporte_pilotos.IdPiloto LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON dbo.trans_picking_ubic.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto
GROUP BY p.codigo, p.nombre, pp.nombre, pe.nombre, um.Nombre, pr.nombre_comercial, bu.descripcion, pp.factor, dbo.trans_picking_ubic.peso_recibido, 
                         dbo.trans_picking_ubic.peso_verificado, dbo.trans_picking_ubic.acepto, dbo.trans_picking_ubic.cantidad_recibida, dbo.trans_picking_ubic.cantidad_verificada, 
                         dbo.trans_picking_ubic.encontrado, dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, 
                         dbo.trans_picking_ubic.IdPropietarioBodega, dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, 
                         dbo.trans_picking_ubic.IdPresentacion, dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_despacho_det.IdDespachoEnc, 
                         dbo.trans_despacho_det.IdDespachoDet, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, 
                         dbo.trans_pe_enc.no_documento, dbo.trans_pe_enc.referencia, dbo.cliente.codigo, dbo.cliente.nombre_comercial, dbo.cliente.idubicacionvirtual, 
                         dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence, 
                         dbo.trans_despacho_det.IdPedidoEnc, dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, 
                         dbo.trans_despacho_enc.marchamo, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, dbo.empresa_transporte_vehiculos.placa, 
                         dbo.empresa_transporte_vehiculos.marca, dbo.empresa_transporte_vehiculos.modelo, dbo.empresa_transporte_vehiculos.placa_comercial, 
                         dbo.empresa_transporte_pilotos.nombres, dbo.empresa_transporte_pilotos.apellidos, dbo.empresa_transporte_pilotos.no_carnet, 
                         dbo.empresa_transporte_pilotos.no_licencia, dbo.cliente.IdCliente
GO



ALTER VIEW [dbo].[VW_Despacho_Rep_Det]
AS
SELECT        dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, dbo.trans_picking_ubic.IdPropietarioBodega, 
                         dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, dbo.trans_picking_ubic.IdPresentacion, 
                         dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_despacho_det.IdDespachoEnc, dbo.trans_despacho_det.IdDespachoDet, 
                         dbo.trans_despacho_det.IdPedidoEnc, pr.nombre_comercial AS Propietario, p.codigo AS Codigo_Producto, p.nombre AS Nombre_Producto, um.Nombre AS UM, 
                         pp.nombre AS Presentacion, pp.factor, pe.nombre AS Estado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence AS Vence, 
                         bu.descripcion AS Ubicacion_Origen, ISNULL(dbo.trans_picking_ubic.cantidad_recibida, 0) AS cantidad_pickeada, 
                         ISNULL(dbo.trans_picking_ubic.cantidad_verificada, 0) AS cantidad_verificada, ISNULL(dbo.trans_picking_ubic.peso_recibido, 0) AS Peso_Pickeado, 
                         ISNULL(dbo.trans_picking_ubic.peso_verificado, 0) AS Peso_Verificado, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, 
                         ISNULL(dbo.trans_picking_ubic.encontrado, 0) AS Encontrado, ISNULL(dbo.trans_picking_ubic.acepto, 0) AS Acepto, 
                         dbo.trans_pe_enc.no_documento AS No_Documento_WMS, dbo.trans_pe_enc.referencia AS No_Referencia, dbo.cliente.codigo AS Codigo_Cliente, 
                         dbo.cliente.nombre_comercial AS Nombre_Cliente, dbo.cliente.idubicacionvirtual, dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, 
                         dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, dbo.trans_despacho_enc.marchamo, 
                         dbo.road_ruta.CODIGO AS Codigo_Ruta, dbo.road_ruta.NOMBRE AS Nombre_Ruta, dbo.empresa_transporte_vehiculos.placa AS Placa_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.placa_comercial, dbo.empresa_transporte_vehiculos.marca AS Marca_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.modelo AS Modelo_Vehiculo, dbo.empresa_transporte_pilotos.nombres AS Nombre_Piloto, 
                         dbo.empresa_transporte_pilotos.apellidos AS Apellido_Piloto, dbo.empresa_transporte_pilotos.no_carnet AS No_Carnet_Piloto, 
                         dbo.empresa_transporte_pilotos.no_licencia AS No_Licencia_Piloto, dbo.cliente.IdCliente, dbo.trans_pe_enc.Fecha_Pedido, 
                         dbo.trans_despacho_enc.fecha AS Fecha_Despacho
FROM            dbo.trans_despacho_det INNER JOIN
                         dbo.bodega_ubicacion AS bu INNER JOIN
                         dbo.producto AS p INNER JOIN
                         dbo.producto_bodega AS pb ON p.IdProducto = pb.IdProducto INNER JOIN
                         dbo.propietario_bodega AS prb ON p.IdPropietario = prb.IdPropietario INNER JOIN
                         dbo.producto_estado AS pe ON prb.IdPropietario = pe.IdPropietario INNER JOIN
                         dbo.unidad_medida AS um ON prb.IdPropietario = um.IdPropietario INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario INNER JOIN
                         dbo.trans_picking_det INNER JOIN
                         dbo.trans_picking_ubic ON dbo.trans_picking_det.IdPickingDet = dbo.trans_picking_ubic.IdPickingDet AND 
                         dbo.trans_picking_det.IdPedidoDet = dbo.trans_picking_ubic.IdPedidoDet ON prb.IdPropietarioBodega = dbo.trans_picking_ubic.IdPropietarioBodega AND 
                         pb.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND pe.IdEstado = dbo.trans_picking_ubic.IdProductoEstado AND 
                         um.IdUnidadMedida = dbo.trans_picking_ubic.IdUnidadMedida ON bu.IdUbicacion = dbo.trans_picking_ubic.IdUbicacion ON 
                         dbo.trans_despacho_det.IdPickingUbic = dbo.trans_picking_ubic.IdPickingUbic AND 
                         dbo.trans_despacho_det.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND 
                         dbo.trans_despacho_det.IdUnidadMedidaBasica = dbo.trans_picking_ubic.IdUnidadMedida INNER JOIN
                         dbo.trans_pe_enc ON prb.IdPropietarioBodega = dbo.trans_pe_enc.IdPropietarioBodega AND 
                         dbo.trans_despacho_det.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc INNER JOIN
                         dbo.cliente ON pr.IdPropietario = dbo.cliente.IdPropietario AND dbo.trans_pe_enc.IdCliente = dbo.cliente.IdCliente INNER JOIN
                         dbo.trans_despacho_enc ON dbo.trans_despacho_det.IdDespachoEnc = dbo.trans_despacho_enc.IdDespachoEnc AND 
                         prb.IdPropietarioBodega = dbo.trans_despacho_enc.IdPropietarioBodega LEFT OUTER JOIN
                         dbo.empresa_transporte_vehiculos ON dbo.trans_despacho_enc.IdVehiculo = dbo.empresa_transporte_vehiculos.IdVehiculo LEFT OUTER JOIN
                         dbo.road_ruta ON dbo.trans_despacho_enc.IdRuta = dbo.road_ruta.IdRuta LEFT OUTER JOIN
                         dbo.empresa_transporte_pilotos ON dbo.trans_despacho_enc.IdPiloto = dbo.empresa_transporte_pilotos.IdPiloto LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON dbo.trans_picking_ubic.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto
GROUP BY p.codigo, p.nombre, pp.nombre, pe.nombre, um.Nombre, pr.nombre_comercial, bu.descripcion, pp.factor, dbo.trans_picking_ubic.peso_recibido, 
                         dbo.trans_picking_ubic.peso_verificado, dbo.trans_picking_ubic.acepto, dbo.trans_picking_ubic.cantidad_recibida, dbo.trans_picking_ubic.cantidad_verificada, 
                         dbo.trans_picking_ubic.encontrado, dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, 
                         dbo.trans_picking_ubic.IdPropietarioBodega, dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, 
                         dbo.trans_picking_ubic.IdPresentacion, dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_despacho_det.IdDespachoEnc, 
                         dbo.trans_despacho_det.IdDespachoDet, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, 
                         dbo.trans_pe_enc.no_documento, dbo.trans_pe_enc.referencia, dbo.cliente.codigo, dbo.cliente.nombre_comercial, dbo.cliente.idubicacionvirtual, 
                         dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence, 
                         dbo.trans_despacho_det.IdPedidoEnc, dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, 
                         dbo.trans_despacho_enc.marchamo, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, dbo.empresa_transporte_vehiculos.placa, 
                         dbo.empresa_transporte_vehiculos.marca, dbo.empresa_transporte_vehiculos.modelo, dbo.empresa_transporte_vehiculos.placa_comercial, 
                         dbo.empresa_transporte_pilotos.nombres, dbo.empresa_transporte_pilotos.apellidos, dbo.empresa_transporte_pilotos.no_carnet, 
                         dbo.empresa_transporte_pilotos.no_licencia, dbo.cliente.IdCliente, dbo.trans_pe_enc.Fecha_Pedido, dbo.trans_despacho_enc.fecha
GO

ALTER VIEW [dbo].[VW_Despacho_Rep_Det]
AS
SELECT        dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, dbo.trans_picking_ubic.IdPropietarioBodega, 
                         dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, dbo.trans_picking_ubic.IdPresentacion, 
                         dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_despacho_det.IdDespachoEnc, dbo.trans_despacho_det.IdDespachoDet, 
                         dbo.trans_despacho_det.IdPedidoEnc, pr.nombre_comercial AS Propietario, p.codigo AS Codigo_Producto, p.nombre AS Nombre_Producto, um.Nombre AS UM, 
                         pp.nombre AS Presentacion, pp.factor, pe.nombre AS Estado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence AS Vence, 
                         bu.descripcion AS Ubicacion_Origen, ISNULL(dbo.trans_picking_ubic.cantidad_recibida, 0) AS cantidad_pickeada, 
                         ISNULL(dbo.trans_picking_ubic.cantidad_verificada, 0) AS cantidad_verificada, ISNULL(dbo.trans_picking_ubic.peso_recibido, 0) AS Peso_Pickeado, 
                         ISNULL(dbo.trans_picking_ubic.peso_verificado, 0) AS Peso_Verificado, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, 
                         ISNULL(dbo.trans_picking_ubic.encontrado, 0) AS Encontrado, ISNULL(dbo.trans_picking_ubic.acepto, 0) AS Acepto, 
                         dbo.trans_pe_enc.no_documento AS No_Documento_WMS, dbo.trans_pe_enc.referencia AS No_Referencia, dbo.cliente.codigo AS Codigo_Cliente, 
                         dbo.cliente.nombre_comercial AS Nombre_Cliente, dbo.cliente.idubicacionvirtual, dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, 
                         dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, dbo.trans_despacho_enc.marchamo, 
                         dbo.road_ruta.CODIGO AS Codigo_Ruta, dbo.road_ruta.NOMBRE AS Nombre_Ruta, dbo.empresa_transporte_vehiculos.placa AS Placa_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.placa_comercial, dbo.empresa_transporte_vehiculos.marca AS Marca_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.modelo AS Modelo_Vehiculo, dbo.empresa_transporte_pilotos.nombres AS Nombre_Piloto, 
                         dbo.empresa_transporte_pilotos.apellidos AS Apellido_Piloto, dbo.empresa_transporte_pilotos.no_carnet AS No_Carnet_Piloto, 
                         dbo.empresa_transporte_pilotos.no_licencia AS No_Licencia_Piloto, dbo.cliente.IdCliente, dbo.trans_pe_enc.Fecha_Pedido, 
                         dbo.trans_despacho_enc.fecha AS Fecha_Despacho, p.IdProducto
FROM            dbo.trans_despacho_det INNER JOIN
                         dbo.bodega_ubicacion AS bu INNER JOIN
                         dbo.producto AS p INNER JOIN
                         dbo.producto_bodega AS pb ON p.IdProducto = pb.IdProducto INNER JOIN
                         dbo.propietario_bodega AS prb ON p.IdPropietario = prb.IdPropietario INNER JOIN
                         dbo.producto_estado AS pe ON prb.IdPropietario = pe.IdPropietario INNER JOIN
                         dbo.unidad_medida AS um ON prb.IdPropietario = um.IdPropietario INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario INNER JOIN
                         dbo.trans_picking_det INNER JOIN
                         dbo.trans_picking_ubic ON dbo.trans_picking_det.IdPickingDet = dbo.trans_picking_ubic.IdPickingDet AND 
                         dbo.trans_picking_det.IdPedidoDet = dbo.trans_picking_ubic.IdPedidoDet ON prb.IdPropietarioBodega = dbo.trans_picking_ubic.IdPropietarioBodega AND 
                         pb.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND pe.IdEstado = dbo.trans_picking_ubic.IdProductoEstado AND 
                         um.IdUnidadMedida = dbo.trans_picking_ubic.IdUnidadMedida ON bu.IdUbicacion = dbo.trans_picking_ubic.IdUbicacion ON 
                         dbo.trans_despacho_det.IdPickingUbic = dbo.trans_picking_ubic.IdPickingUbic AND 
                         dbo.trans_despacho_det.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND 
                         dbo.trans_despacho_det.IdUnidadMedidaBasica = dbo.trans_picking_ubic.IdUnidadMedida INNER JOIN
                         dbo.trans_pe_enc ON prb.IdPropietarioBodega = dbo.trans_pe_enc.IdPropietarioBodega AND 
                         dbo.trans_despacho_det.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc INNER JOIN
                         dbo.cliente ON pr.IdPropietario = dbo.cliente.IdPropietario AND dbo.trans_pe_enc.IdCliente = dbo.cliente.IdCliente INNER JOIN
                         dbo.trans_despacho_enc ON dbo.trans_despacho_det.IdDespachoEnc = dbo.trans_despacho_enc.IdDespachoEnc AND 
                         prb.IdPropietarioBodega = dbo.trans_despacho_enc.IdPropietarioBodega LEFT OUTER JOIN
                         dbo.empresa_transporte_vehiculos ON dbo.trans_despacho_enc.IdVehiculo = dbo.empresa_transporte_vehiculos.IdVehiculo LEFT OUTER JOIN
                         dbo.road_ruta ON dbo.trans_despacho_enc.IdRuta = dbo.road_ruta.IdRuta LEFT OUTER JOIN
                         dbo.empresa_transporte_pilotos ON dbo.trans_despacho_enc.IdPiloto = dbo.empresa_transporte_pilotos.IdPiloto LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON dbo.trans_picking_ubic.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto
GROUP BY p.codigo, p.nombre, pp.nombre, pe.nombre, um.Nombre, pr.nombre_comercial, bu.descripcion, pp.factor, dbo.trans_picking_ubic.peso_recibido, 
                         dbo.trans_picking_ubic.peso_verificado, dbo.trans_picking_ubic.acepto, dbo.trans_picking_ubic.cantidad_recibida, dbo.trans_picking_ubic.cantidad_verificada, 
                         dbo.trans_picking_ubic.encontrado, dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, 
                         dbo.trans_picking_ubic.IdPropietarioBodega, dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, 
                         dbo.trans_picking_ubic.IdPresentacion, dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_despacho_det.IdDespachoEnc, 
                         dbo.trans_despacho_det.IdDespachoDet, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, 
                         dbo.trans_pe_enc.no_documento, dbo.trans_pe_enc.referencia, dbo.cliente.codigo, dbo.cliente.nombre_comercial, dbo.cliente.idubicacionvirtual, 
                         dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence, 
                         dbo.trans_despacho_det.IdPedidoEnc, dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, 
                         dbo.trans_despacho_enc.marchamo, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, dbo.empresa_transporte_vehiculos.placa, 
                         dbo.empresa_transporte_vehiculos.marca, dbo.empresa_transporte_vehiculos.modelo, dbo.empresa_transporte_vehiculos.placa_comercial, 
                         dbo.empresa_transporte_pilotos.nombres, dbo.empresa_transporte_pilotos.apellidos, dbo.empresa_transporte_pilotos.no_carnet, 
                         dbo.empresa_transporte_pilotos.no_licencia, dbo.cliente.IdCliente, dbo.trans_pe_enc.Fecha_Pedido, dbo.trans_despacho_enc.fecha, p.IdProducto
GO

'#EJC20190604
ALTER TABLE unidad_medida add codigo nvarchar(25)

ALTER VIEW [dbo].[VW_UnidadMedida]
AS
SELECT        p.nombre_comercial AS Propietario, e.IdUnidadMedida, e.IdPropietario, e.Nombre, e.activo, e.fec_agr, e.user_mod, e.fec_mod, e.user_agr, e.codigo
FROM            dbo.unidad_medida AS e INNER JOIN
                         dbo.propietarios AS p ON e.IdPropietario = p.IdPropietario
GO

CREATE TABLE [dbo].[trans_series_doc](
    [IdTransSerieDoc] [int] NOT NULL,
    [Serie] [nvarchar](20) NOT NULL,
    [Tipo_Doc] [nvarchar](20) NOT NULL,
	[IdTipoTrans] int NOT NULL,
    [Inicial] [int] NULL,
    [Final] [int] NULL,
    [Actual] [int] NULL,
    [Activo] [bit] NOT NULL,
    [IdBodega] [int] NOT NULL,
    [UserAgr] [nvarchar](25) NULL,
    [FecAgr] [datetime] NULL,
    [UserMod] [nvarchar](25) NULL,
    [FecMod] [datetime] NULL,
 CONSTRAINT [PK_Correlativo] PRIMARY KEY CLUSTERED
(
    [IdTransSerieDoc] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

ALTER TABLE [dbo].[trans_series_doc]  WITH CHECK ADD  CONSTRAINT [FK_correlativo_bodega] FOREIGN KEY([IdBodega])
REFERENCES [dbo].[bodega] ([IdBodega])
GO

ALTER TABLE [dbo].[trans_series_doc] CHECK CONSTRAINT [FK_correlativo_bodega]
GO

/****** Changes ON Date: 28/03/2019 05:09:42 p.m. ******/
CREATE TABLE [dbo].[configuracion_barra_pallet](
	[IdConfiguracionPallet] [int] NOT NULL,
	[LongCodBodegaOrigen] [int] NULL,
	[LongCodProducto] [int] NULL,
	[LongLP] [int] NULL,
	[CodigoNumerico] [bit] NULL,
 CONSTRAINT [PK_configuracion_barra_pallet] PRIMARY KEY CLUSTERED 
(
	[IdConfiguracionPallet] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Si verdadero, entonces se hace un val del código en la HH de lo contrario se tomarán los ceros a la izquierda como parte del código' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'configuracion_barra_pallet', @level2type=N'COLUMN',@level2name=N'CodigoNumerico'
GO

alter table proveedor add IdConfiguracionBarraPallet int null

ALTER VIEW [dbo].[VW_Proveedor]
AS
SELECT        e.nombre AS Empresa, pr.nombre_comercial AS Propietario, p.IdEmpresa, p.IdPropietario, p.IdProveedor, p.codigo, p.nombre, p.telefono, p.nit, p.direccion, p.email, 
                         p.contacto, p.activo, p.muestra_precio, p.user_agr, p.fec_agr, p.user_mod, p.fec_mod, p.actualiza_costo_oc, dbo.proveedor_bodega.IdBodega, 
                         dbo.proveedor_bodega.activo AS activo_proveedor_bodega, p.idubicacionvirtual, p.es_bodega_recepcion, p.es_bodega_traslado, p.referencia, p.sistema, 
                         p.IdConfiguracionBarraPallet
FROM            dbo.proveedor AS p INNER JOIN
                         dbo.empresa AS e ON p.IdEmpresa = e.IdEmpresa INNER JOIN
                         dbo.propietarios AS pr ON p.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.proveedor_bodega ON p.IdProveedor = dbo.proveedor_bodega.IdProveedor
GO


alter table trans_re_enc add No_Marchamo nvarchar(50)
alter table bodega add codigo_bodega_erp nvarchar(25)
alter table producto_estado add codigo_bodega_erp nvarchar(25)
alter table bodega_ubicacion add codigo_bodega_erp nvarchar(25)
alter table bodega add ubic_transito nvarchar(25)
alter table bodega alter column codigo nvarchar(25) collate sql_latin1_general_cp1_ci_as
alter table road_p_vendedor drop constraint PK_P_VENDEDOR
alter table road_p_vendedor alter column codigo nvarchar(8) collate sql_latin1_general_cp1_ci_as not null
alter table road_p_vendedor add constraint PK_P_VENDEDOR  PRIMARY KEY (codigo)
alter table road_p_vendedor alter column nombre nvarchar(50) collate sql_latin1_general_cp1_ci_as not null
alter table i_nav_transacciones_out add Cantidad_Presentacion float
insert into trans_oc_ti values (3,'Transferencia', 0,1,GETDATE(),1,GETDATE(),1)
update proveedor_bodega set activo = 1
update cliente_bodega set activo = 1
alter table cliente add control_ultimo_lote bit default 0
alter table trans_pe_enc add control_ultimo_lote bit default 0


alter table i_nav_barras_pallet add Cantidad_UMP float

alter table configuracion_barra_pallet add IdentificadorInicio char(4)

alter table trans_pe_enc add Serie nvarchar(25)
alter table trans_pe_enc add Correlativo int

alter table trans_oc_enc add serie nvarchar(25)
alter table trans_oc_enc add correlativo int
alter table trans_oc_enc add IdDespachoEnc int null

alter table estructura_tramo add Horizontal bit default 0 
alter table bodega_tramo add Horizontal bit default 0

alter table i_nav_transacciones_out add lic_plate nvarchar(50) collate Modern_Spanish_CI_AS
alter table i_nav_transacciones_out add uds_lic_plate float

alter table trans_inv_enc add capturar_no_existente bit default 0

alter table producto_presentacion add IdPresentacionPallet int FOREIGN KEY (IdPresentacionPallet) REFERENCES producto_presentacion(IdPresentacion)

alter table trans_movimientos add lic_plate nvarchar(50)


INSERT INTO menu_sistema VALUES('6.1.1.13','Existencias por LP','cmdRpExitLP','4','6.1.1','0')

INSERT INTO menu_rol
SELECT max(idMenuRol) + 1,'6.1.1.13','1','Erik Calderón','2019-04-10 00:00:00.000','Erik Calderón','2019-04-10 00:00:00.000','1','1'
from menu_rol
 

CREATE TABLE [dbo].[trans_inv_ne](
	[idinventarione] [int] NOT NULL,
	[idinventarioenc] [int] NOT NULL,
	[idproducto] [int] NULL,
	[codigo] [nvarchar](50) NULL,
	[nombre] [nvarchar](50) NULL,
	[cantidad] [float] NULL,
	[fec_agr] [datetime] NULL,
	[usr_agr] [nvarchar](50) NULL,
 CONSTRAINT [PK_trans_inv_ne] PRIMARY KEY CLUSTERED 
(
	[idinventarione] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

ALTER VIEW [dbo].[VW_ProductoPresentacion]
AS
SELECT        p.nombre AS Producto, pp.IdPresentacion, pp.IdProducto, pp.codigo_barra, pp.nombre, pp.imprime_barra, pp.peso, pp.alto, pp.largo, pp.ancho, pp.factor, 
                         pp.MinimoExistencia, pp.MaximoExistencia, pp.user_agr, pp.fec_agr, pp.user_mod, pp.fec_mod, pp.activo, pp.EsPallet, pp.Precio, pp.MinimoPeso, pp.MaximoPeso, 
                         pp.Costo, pp.CamasPorTarima, pp.CajasPorCama, pp.genera_lp_auto, pp.permitir_paletizar, pp.sistema, pp.IdPresentacionPallet
FROM            dbo.producto_presentacion AS pp INNER JOIN
                         dbo.producto AS p ON pp.IdProducto = p.IdProducto
GO



INSERT INTO menu_sistema VALUES('6.1.1.14','Existencias con rec','cmdExistCnRec','4','6.1.1','0')
INSERT INTO menu_rol
SELECT max(idMenuRol) + 1,'6.1.1.14','1','Erik Calderón','2019-04-10 00:00:00.000','Erik Calderón','2019-04-10 00:00:00.000','1','1'
from menu_rol
 
update menu_sistema 
set nombre_lgco='cmdMi3', solicitar_clave_autorizacion = 0
where IdMenu = '7.5.1'
 
INSERT INTO menu_sistema VALUES('7.5.1.1','Transacciones Out','cmdTransaccionesOut','4','7.5.1','1')
INSERT INTO menu_sistema VALUES('7.5.1.1','Barras Pallet','cmdBarrasPallet','4','7.5.1','1')
INSERT INTO menu_rol
SELECT max(idMenuRol) + 1,'7.5.1.1','1','Erik Calderón','2019-04-10 00:00:00.000','Erik Calderón','2019-04-10 00:00:00.000','1','1'
from menu_rol
INSERT INTO menu_rol
SELECT max(idMenuRol) + 1,'7.5.1.2','1','Erik Calderón','2019-04-10 00:00:00.000','Erik Calderón','2019-04-10 00:00:00.000','1','1'
from menu_rol


ALTER VIEW [dbo].[VW_Stock_SP]
AS
SELECT        dbo.producto_bodega.IdBodega, dbo.propietarios.IdPropietario, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto.IdProducto, 
                         dbo.producto_bodega.IdProductoBodega, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion AS IdUbicacionActual, dbo.stock.IdUbicacion_anterior, 
                         dbo.unidad_medida.IdUnidadMedida, dbo.stock.IdProductoEstado, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, 
                         dbo.propietarios.nombre_comercial AS Propietario, bodega_ubicacion_1.descripcion AS UbicacionAnterior, dbo.unidad_medida.Nombre AS UnidadMedida, 
                         dbo.producto_presentacion.nombre AS Presentacion, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.serial, 
                         dbo.stock.añada, dbo.stock.cantidad, dbo.stock.fecha_vence, dbo.producto_estado.nombre AS NomEstado, dbo.producto_estado.utilizable AS EstadoUtilizable, 
                         dbo.producto_estado.dañado, dbo.stock.IdUbicacion, dbo.stock.lic_plate, dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, 
                         dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, dbo.producto_presentacion.factor
FROM            dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.propietario_bodega INNER JOIN
                         dbo.stock INNER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto ON dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega ON 
                         dbo.propietario_bodega.IdPropietarioBodega = dbo.stock.IdPropietarioBodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON 
                         dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.stock.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.bodega_ubicacion AS bodega_ubicacion_1 ON dbo.stock.IdUbicacion_anterior = bodega_ubicacion_1.IdUbicacion LEFT OUTER JOIN
                         dbo.bodega_ubicacion ON dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion
GROUP BY dbo.propietarios.nombre_comercial, dbo.propietarios.IdPropietario, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion, dbo.stock.IdUbicacion_anterior, 
                         bodega_ubicacion_1.descripcion, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto_bodega.IdProductoBodega, dbo.unidad_medida.IdUnidadMedida, 
                         dbo.unidad_medida.Nombre, dbo.producto_presentacion.nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, 
                         dbo.stock.fecha_ingreso, dbo.stock.serial, dbo.stock.añada, dbo.stock.cantidad, dbo.producto_bodega.IdBodega, dbo.stock.fecha_vence, 
                         dbo.stock.IdProductoEstado, dbo.producto_estado.nombre, dbo.producto_estado.utilizable, dbo.producto_estado.dañado, dbo.stock.IdUbicacion, 
                         dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.stock.lic_plate, dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, 
                         dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, dbo.producto_presentacion.factor
GO

ALTER TABLE [dbo].[licencia_item] DROP CONSTRAINT [PK_licencia_item] WITH ( ONLINE = OFF )
GO
ALTER TABLE [licencia_item] 
ALTER COLUMN idDisp nvarchar (500) not null
SET ANSI_PADDING ON
GO
/****** Object: Index [PK_licencia_item] Script Date: 26/04/2019 9:01:51 ******/
ALTER TABLE [dbo].[licencia_item] ADD CONSTRAINT [PK_licencia_item] PRIMARY KEY CLUSTERED 
(
[idDisp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

ALTER TABLE licencia_item 
ALTER COLUMN identificacion nvarchar (500)
ALTER TABLE licencia_llave 
ALTER COLUMN Llave nvarchar (500)
ALTER TABLE licencia_login 
ALTER COLUMN valor nvarchar (500)
ALTER TABLE [dbo].[licencia_login] DROP CONSTRAINT [PK_licencia_login] WITH ( ONLINE = OFF )
GO
ALTER TABLE [licencia_login] 
ALTER COLUMN idDisp nvarchar (500) not null
SET ANSI_PADDING ON
GO
/****** Object: Index [PK_licencia_item] Script Date: 26/04/2019 9:01:51 ******/
ALTER TABLE [dbo].[licencia_login] ADD CONSTRAINT [PK_licencia_login] PRIMARY KEY CLUSTERED 
(
[idDisp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
ALTER TABLE licencia_solic 
ALTER COLUMN identificacion nvarchar (500)

ALTER TABLE [dbo].[licencia_solic] DROP CONSTRAINT [PK_licencia_solic] WITH ( ONLINE = OFF )
GO
ALTER TABLE [licencia_solic] 
ALTER COLUMN idDisp nvarchar (500) not null
SET ANSI_PADDING ON
GO
/****** Object: Index [PK_licencia_item] Script Date: 26/04/2019 9:01:51 ******/
ALTER TABLE [dbo].[licencia_solic] ADD CONSTRAINT [PK_licencia_solic] PRIMARY KEY CLUSTERED 
(
[idDisp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO


ALTER PROCEDURE [dbo].[CLBD_PRC]
AS
BEGIN
DELETE FROM transacciones_log
DELETE FROM trans_ubic_tarima
DELETE FROM trans_ubic_hh_se
DELETE FROM trans_ubic_hh_op
DELETE FROM trans_ubic_hh_enc
DELETE FROM trans_ubic_hh_det
DELETE FROM trans_ubic_hh_stock
DELETE FROM trans_tras_op
DELETE FROM trans_tras_enc
DELETE FROM trans_tras_det
DELETE FROM trans_re_op
DELETE FROM trans_re_oc
DELETE FROM trans_re_img
DELETE FROM trans_re_fact
DELETE FROM producto_pallet
DELETE FROM trans_re_enc
DELETE FROM trans_re_det_parametros
DELETE FROM trans_re_det_infraccion
DELETE FROM trans_re_det
DELETE FROM trans_picking_ubic
DELETE FROM trans_picking_op
DELETE FROM trans_picking_enc
DELETE FROM trans_picking_det_parametros
DELETE FROM trans_picking_det
DELETE FROM trans_pe_det
DELETE FROM trans_pe_enc
DELETE FROM trans_oc_pol
DELETE FROM trans_oc_imagen
DELETE FROM trans_oc_det_lote
DELETE FROM trans_oc_det
DELETE FROM trans_oc_enc
DELETE FROM trans_movimientos
DELETE FROM trans_inventario_enc
DELETE FROM trans_inventario_det
DELETE FROM trans_despacho_enc
DELETE FROM trans_despacho_det
DELETE FROM tarea_hh
DELETE FROM stock_se_rec
DELETE FROM stock_se
DELETE FROM stock_res_se
DELETE FROM stock_res
DELETE FROM stock_rec
DELETE FROM stock_parametro
DELETE FROM stock_hist
DELETE FROM stock
DELETE FROM trans_inv_detalle
DELETE FROM trans_inv_resumen
DELETE FROM trans_inv_reconteo
DELETE FROM trans_inv_ciclico
DELETE FROM trans_inv_ciclico_ubic
DELETE FROM trans_inv_tramo
DELETE FROM trans_inv_operador
DELETE FROM trans_inv_stock
DELETE FROM trans_inv_stock_prod
DELETE FROM trans_inv_enc
DELETE FROM Appointments
DELETE FROM i_nav_ejecucion_det_error
DELETE FROM i_nav_ejecucion_res
DELETE FROM i_nav_ejecucion_enc
DELETE FROM I_nav_transacciones_out
DELETE FROM i_nav_barras_pallet
END

GO

alter table i_nav_barras_pallet add Lote_Numerico int

CREATE TABLE [dbo].[trans_re_det_lote_num](
	[IdLoteNum] [int] NOT NULL,
	[IdRecepcionEnc] [int] NULL,
	[IdProductoBodega] [int] NULL,
	[Codigo] [nvarchar](50) NULL,
	[Lote] [nvarchar](50) NULL,
	[Lote_Numerico] [int] NULL,
	[FechaIngreso] [date] NULL,
	[Cantidad] [float] NULL,
 CONSTRAINT [PK_lote_num] PRIMARY KEY CLUSTERED 
(
	[IdLoteNum] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[trans_despacho_det_lote_num](
	[IdDespachoDetLote] [int] NOT NULL,
	[IdDespachoEnc] [int] NOT NULL,
	[IdPedidoEnc] [int] NULL,	
	[IdProductoBodega] [int] NULL,	
	[Lote] [nvarchar](250) NULL,
	[LoteNum] [int] NULL,
	[CantidadDespachada] [float] NULL,
	[PesoDespachado] [float] NULL,
	[IdProductoEstado] [int] NULL,
 CONSTRAINT [PK_trans_despacho_det_lote] PRIMARY KEY CLUSTERED 
(
	[IdDespachoDetLote] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


alter table bodega_tramo add Horizontal bit

CREATE VIEW [dbo].[VW_Cambios_Ubicacion]
AS
SELECT        TOP (100) PERCENT dbo.trans_movimientos.IdBodegaOrigen, dbo.sis_tipo_tarea.Nombre AS TipoTarea, dbo.producto.codigo AS Código, dbo.producto.nombre AS Producto, dbo.trans_movimientos.cantidad as Cantidad, 
                         dbo.unidad_medida.Nombre AS UMBas, dbo.trans_movimientos.peso AS Peso, dbo.trans_movimientos.lote AS Lote, dbo.trans_movimientos.lic_plate AS LP, dbo.trans_movimientos.fecha_vence AS Vence, dbo.producto_estado.nombre AS Estado, 
                         dbo.motivo_ubicacion.Nombre AS Motivo, dbo.propietarios.nombre_comercial AS Propietario, 
CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, 
iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
+ ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
ELSE bodega_tramo.descripcion END AS Ubicacion_Origen,
CASE WHEN bodega_tramo_1.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo_1.descripcion, 2, 
iif(CHARINDEX('-', bodega_tramo_1.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo_1.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
bodega_ubicacion_1.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo_1.descripcion, iif(CHARINDEX('-', bodega_tramo_1.descripcion, 0) < 0, 0, CHARINDEX('-', 
bodega_tramo_1.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion_1.nivel), 2) 
+ ' - ' + 'Pos' + bodega_ubicacion_1.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion_1.IdUbicacion) 
ELSE bodega_tramo_1.descripcion END AS Ubicacion_Destino,
						 dbo.trans_movimientos.fecha as Fecha, dbo.trans_movimientos.IdPresentacion, dbo.producto_presentacion.nombre AS Presentacion, 
                         dbo.producto_presentacion.factor AS Factor, trans_movimientos.IdProductoBodega, trans_movimientos.IdPropietarioBodega
FROM            dbo.propietarios INNER JOIN
                         dbo.trans_movimientos INNER JOIN
                         dbo.sis_tipo_tarea ON dbo.trans_movimientos.IdTipoTarea = dbo.sis_tipo_tarea.IdTipoTarea INNER JOIN
                         dbo.producto_bodega ON dbo.trans_movimientos.IdProductoBodega = dbo.producto_bodega.IdProductoBodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
                         dbo.producto_estado ON dbo.trans_movimientos.IdEstadoOrigen = dbo.producto_estado.IdEstado AND dbo.trans_movimientos.IdEstadoDestino = dbo.producto_estado.IdEstado INNER JOIN
                         dbo.bodega_ubicacion ON dbo.trans_movimientos.IdUbicacionOrigen = dbo.bodega_ubicacion.IdUbicacion INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo INNER JOIN
                         dbo.bodega_ubicacion AS bodega_ubicacion_1 ON dbo.trans_movimientos.IdUbicacionDestino = bodega_ubicacion_1.IdUbicacion INNER JOIN
                         dbo.bodega_tramo AS bodega_tramo_1 ON bodega_ubicacion_1.IdTramo = bodega_tramo_1.IdTramo ON dbo.propietarios.IdPropietario = dbo.producto_estado.IdPropietario AND 
                         dbo.propietarios.IdPropietario = dbo.producto_estado.IdPropietario INNER JOIN
                         dbo.propietario_bodega ON dbo.trans_movimientos.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega AND dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario INNER JOIN
                         dbo.unidad_medida ON dbo.propietarios.IdPropietario = dbo.unidad_medida.IdPropietario AND dbo.trans_movimientos.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida AND 
                         dbo.producto.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.trans_movimientos.IdPresentacion = dbo.producto_presentacion.IdPresentacion AND dbo.producto.IdProducto = dbo.producto_presentacion.IdProducto LEFT OUTER JOIN
                         dbo.motivo_ubicacion INNER JOIN
                         dbo.trans_ubic_hh_enc ON dbo.motivo_ubicacion.IdMotivoUbicacion = dbo.trans_ubic_hh_enc.IdMotivoUbicacion ON dbo.trans_movimientos.IdTransaccion = dbo.trans_ubic_hh_enc.IdTareaUbicacionEnc
WHERE        (dbo.sis_tipo_tarea.Nombre = 'UBIC')
GO


ALTER VIEW [dbo].[VW_Pedido]
AS
SELECT        enc.IdPedidoEnc AS Pedido, enc.referencia, det.IdPedidoDet, p.codigo AS Código, p.nombre AS Producto, pp.nombre AS Presentacion, u.Nombre AS UnidadMedida, e.nombre AS Estado, det.Cantidad, enc.Fecha_Pedido AS Fecha,
                          p.IdProducto, enc.IdPickingEnc, enc.estado AS EstadoPedido, enc.IdBodega, dbo.trans_picking_ubic.cantidad_recibida AS Cantidad_Pickeada, dbo.trans_picking_ubic.cantidad_verificada, 
                         dbo.trans_picking_ubic.cantidad_despachada
FROM            dbo.trans_picking_ubic INNER JOIN
                         dbo.trans_picking_det ON dbo.trans_picking_ubic.IdPickingDet = dbo.trans_picking_det.IdPickingDet RIGHT OUTER JOIN
                         dbo.trans_pe_enc AS enc INNER JOIN
                         dbo.trans_pe_det AS det ON enc.IdPedidoEnc = det.IdPedidoEnc INNER JOIN
                         dbo.producto_bodega AS pb ON det.IdProductoBodega = pb.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON pb.IdProducto = p.IdProducto INNER JOIN
                         dbo.producto_estado AS e ON det.IdEstado = e.IdEstado INNER JOIN
                         dbo.unidad_medida AS u ON det.IdUnidadMedidaBasica = u.IdUnidadMedida ON dbo.trans_picking_det.IdPedidoDet = det.IdPedidoDet LEFT OUTER JOIN
                         dbo.trans_picking_enc ON dbo.trans_picking_det.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc AND enc.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON det.IdPresentacion = pp.IdPresentacion
GO

ALTER VIEW [dbo].[VW_Cambios_Ubicacion]
AS
SELECT        TOP (100) PERCENT dbo.trans_movimientos.IdBodegaOrigen, dbo.sis_tipo_tarea.Nombre AS TipoTarea, dbo.producto.codigo AS Código, dbo.producto.nombre AS Producto, dbo.trans_movimientos.cantidad AS Cantidad, 
                         dbo.unidad_medida.Nombre AS UMBas, dbo.trans_movimientos.peso AS Peso, dbo.trans_movimientos.lote AS Lote, dbo.trans_movimientos.barra_pallet AS LP, dbo.trans_movimientos.fecha_vence AS Vence, 
						CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, 
						iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
						bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
						bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
						+ ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
						ELSE bodega_tramo.descripcion END AS Ubicacion_Origen,
						CASE WHEN bodega_tramo_1.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo_1.descripcion, 2, 
						iif(CHARINDEX('-', bodega_tramo_1.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo_1.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
						bodega_ubicacion_1.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo_1.descripcion, iif(CHARINDEX('-', bodega_tramo_1.descripcion, 0) < 0, 0, CHARINDEX('-', 
						bodega_tramo_1.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion_1.nivel), 2) 
						+ ' - ' + 'Pos' + bodega_ubicacion_1.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion_1.IdUbicacion) 
						ELSE bodega_tramo_1.descripcion END AS Ubicacion_Destino,
                         dbo.producto_estado.nombre AS EstadoOrigen,  producto_estado_1.nombre AS EstadoDestino,
						 dbo.motivo_ubicacion.Nombre AS Motivo, dbo.propietarios.nombre_comercial AS Propietario, dbo.trans_movimientos.fecha AS Fecha, dbo.trans_movimientos.IdPresentacion, 
                         dbo.producto_presentacion.nombre AS Presentacion, dbo.producto_presentacion.factor AS Factor, dbo.trans_movimientos.IdProductoBodega, dbo.trans_movimientos.IdPropietarioBodega,
						 ISNULL(dbo.operador.nombres,'S/N') + ' ' + ISNULL(dbo.operador.apellidos,'') AS Operador
FROM            dbo.trans_movimientos INNER JOIN
                         dbo.sis_tipo_tarea ON dbo.trans_movimientos.IdTipoTarea = dbo.sis_tipo_tarea.IdTipoTarea INNER JOIN
                         dbo.producto_bodega ON dbo.trans_movimientos.IdProductoBodega = dbo.producto_bodega.IdProductoBodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
                         dbo.bodega_ubicacion ON dbo.trans_movimientos.IdUbicacionOrigen = dbo.bodega_ubicacion.IdUbicacion INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo INNER JOIN
                         dbo.bodega_ubicacion AS bodega_ubicacion_1 ON dbo.trans_movimientos.IdUbicacionDestino = bodega_ubicacion_1.IdUbicacion INNER JOIN
                         dbo.bodega_tramo AS bodega_tramo_1 ON bodega_ubicacion_1.IdTramo = bodega_tramo_1.IdTramo INNER JOIN
                         dbo.propietario_bodega ON dbo.trans_movimientos.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.producto_estado ON dbo.propietarios.IdPropietario = dbo.producto_estado.IdPropietario AND dbo.propietarios.IdPropietario = dbo.producto_estado.IdPropietario ON 
                         dbo.propietario_bodega.IdPropietario = dbo.propietarios.IdPropietario AND dbo.trans_movimientos.IdEstadoOrigen = dbo.producto_estado.IdEstado INNER JOIN
                         dbo.unidad_medida ON dbo.propietarios.IdPropietario = dbo.unidad_medida.IdPropietario AND dbo.trans_movimientos.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida AND 
                         dbo.producto.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida INNER JOIN
                         dbo.producto_estado AS producto_estado_1 ON dbo.propietarios.IdPropietario = producto_estado_1.IdPropietario AND dbo.propietarios.IdPropietario = producto_estado_1.IdPropietario AND 
                         dbo.trans_movimientos.IdEstadoDestino = producto_estado_1.IdEstado INNER JOIN
                         dbo.operador ON dbo.trans_movimientos.usuario_agr = dbo.operador.IdOperador LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.trans_movimientos.IdPresentacion = dbo.producto_presentacion.IdPresentacion AND dbo.producto.IdProducto = dbo.producto_presentacion.IdProducto LEFT OUTER JOIN
                         dbo.motivo_ubicacion INNER JOIN
                         dbo.trans_ubic_hh_enc ON dbo.motivo_ubicacion.IdMotivoUbicacion = dbo.trans_ubic_hh_enc.IdMotivoUbicacion ON dbo.trans_movimientos.IdTransaccion = dbo.trans_ubic_hh_enc.IdTareaUbicacionEnc
WHERE        (dbo.sis_tipo_tarea.Nombre IN ('UBIC', 'CEST'))
GO

alter table propietarios add sistema bit default 0

ALTER VIEW [dbo].[VW_Propietario]
AS
SELECT        e.nombre AS Empresa, p.IdPropietario, p.IdEmpresa, p.IdTipoActualizacionCosto, p.contacto, p.nombre_comercial, p.imagen, p.telefono, p.direccion, p.activo, p.user_agr, p.fec_agr, p.user_mod, p.fec_mod, p.email, 
                         p.actualiza_costo_oc, p.color, p.codigo, p.sistema
FROM            dbo.propietarios AS p LEFT OUTER JOIN
                         dbo.empresa AS e ON p.IdEmpresa = e.IdEmpresa
GO

alter table trans_re_enc add mostrar_cantidad_esperada bit default 1

CREATE TABLE [dbo].[impresion_productos_barras](
[IdProductoBarra] [int] NOT NULL,
[codigo] [nvarchar](50) NULL,
[nombre] [nvarchar](100) NULL,
[codigo_barra] [nvarchar](100) NULL,
[cantidad_impresiones] [int] NULL,
[IdPresentacion] [int] NULL,
[IdUnidadMedidaBasica] [int] NULL,
[UnidadMedida] [nvarchar](50) NULL,
[Presentacion] [nvarchar](50) NULL,
[Camas_Por_Tarima] [int] NULL,
[Cajas_Por_Cama] [int] NULL,
[Cantidad_Presentacion] [float] NULL,
[Factor] [float] NULL,
[Lote] [nvarchar](50) NULL,
[Fecha_Ingreso] [date] NULL,
[Fecha_Vence] [date] NULL,
[fecha_agr] [datetime] NULL,
[user_agr] [nvarchar](50) NULL,
[impreso] [bit] NULL,
[activo] [bit] NULL,
CONSTRAINT [PK_Impresion_productos_barras] PRIMARY KEY CLUSTERED 
(
[IdProductoBarra] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER VIEW [dbo].[VW_Recepcion]
AS
SELECT        dbo.trans_re_enc.IdRecepcionEnc AS Código, dbo.propietarios.nombre_comercial AS Propietario, dbo.proveedor.nombre AS Proveedor, 
                         dbo.bodega.nombre AS Bodega, dbo.trans_re_oc.IdOrdenCompraEnc AS NoOrdenCompra, 
                         dbo.trans_oc_enc.No_Documento + ' ' + dbo.trans_oc_enc.Referencia AS No_DocumentoOC, dbo.trans_re_enc.fecha_recepcion AS Fecha, dbo.trans_re_enc.estado as Estado, 
                         dbo.trans_re_tr.TipoTrans, dbo.trans_re_tr.Descripcion, dbo.bodega_muelles.nombre AS Muelle, dbo.trans_re_enc.activo as Activo, dbo.usuario.nombres AS Usuario_Agrego, 
                         dbo.trans_re_enc.fec_agr AS Fecha_Agrego, dbo.trans_re_tr.IdTipoTransaccion, dbo.bodega.IdBodega
FROM            dbo.usuario INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.propietario_bodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario INNER JOIN
                         dbo.trans_re_tr INNER JOIN
                         dbo.trans_re_enc ON dbo.trans_re_tr.IdTipoTransaccion = dbo.trans_re_enc.IdTipoTransaccion ON 
                         dbo.propietario_bodega.IdPropietarioBodega = dbo.trans_re_enc.IdPropietarioBodega ON dbo.usuario.IdUsuario = dbo.trans_re_enc.user_agr INNER JOIN
                         dbo.bodega ON dbo.propietario_bodega.IdBodega = dbo.bodega.IdBodega LEFT OUTER JOIN
                         dbo.bodega_muelles INNER JOIN
                         dbo.bodega AS bodega_1 ON dbo.bodega_muelles.IdBodega = bodega_1.IdBodega INNER JOIN
                         dbo.proveedor_bodega ON bodega_1.IdBodega = dbo.proveedor_bodega.IdBodega INNER JOIN
                         dbo.trans_re_oc INNER JOIN
                         dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc ON 
                         dbo.proveedor_bodega.IdAsignacion = dbo.trans_oc_enc.IdProveedorBodega INNER JOIN
                         dbo.proveedor ON dbo.proveedor_bodega.IdProveedor = dbo.proveedor.IdProveedor ON dbo.propietarios.IdPropietario = dbo.proveedor.IdPropietario AND 
                         dbo.trans_re_enc.IdMuelle = dbo.bodega_muelles.IdMuelle AND dbo.trans_re_enc.IdRecepcionEnc = dbo.trans_re_oc.IdRecepcionEnc
GO

'CM: Agregué Cantidad_presentacion en VW_MOVIMIENTOS.
ALTER VIEW [dbo].[VW_Movimientos]
AS
SELECT        pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS [Estado Origen], pe2.nombre AS [Estado Destino], 
                         u.Nombre AS [Unidad de Medida], m.cantidad, m.peso, m.lote, u1.descripcion AS Origen, u2.descripcion AS Destino, stt.Nombre AS [Tipo Tarea], m.IdBodegaOrigen, 
                         m.fecha, p.IdProducto, p.codigo, p.codigo_barra, m.barra_pallet, m.fecha_vence, m.cantidad / pp.factor AS Cantidad_Presentacion
FROM            dbo.trans_movimientos AS m LEFT OUTER JOIN
                         dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
                         dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion LEFT OUTER JOIN
                         dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
                         dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
GROUP BY pr.nombre_comercial, p.nombre, pp.nombre, pe1.nombre, pe2.nombre, u.Nombre, m.cantidad, m.peso, m.lote, u1.descripcion, u2.descripcion, stt.Nombre, 
                         m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra, m.barra_pallet, m.fecha_vence, pp.IdPresentacion, pp.factor, m.cantidad / pp.factor
GO

